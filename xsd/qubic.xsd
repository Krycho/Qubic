<?xml version="1.0"?>
<xs:schema version="1.0"
           xmlns:xs="http://www.w3.org/2001/XMLSchema"
           attributeFormDefault="unqualified"
           elementFormDefault="qualified"
           targetNamespace="http://www.example.org/Qubic"
           xmlns:q="http://www.example.org/Qubic">
    <xs:element name="qubic">
        <xs:complexType>
            <xs:all>
                <xs:element name="credentials" type="q:credentialsType"/>
                <xs:element name="connection" type="q:connectionType"/>
                <xs:element name="querying" type="q:queryingType"/>
                <xs:element name="qubes" type="q:qubesMapping"/>
            </xs:all>
        </xs:complexType>
    </xs:element>

    <!--
        definition of credentials element
        used to connect to the database
    -->
    <xs:complexType name="credentialsType">
        <xs:sequence>
            <xs:element name="username" minOccurs="1" maxOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="2"/>
                        <xs:maxLength value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
            <xs:element name="password" minOccurs="1" maxOccurs="1">
                <xs:simpleType>
                    <xs:restriction base="xs:string">
                        <xs:minLength value="2"/>
                        <xs:maxLength value="100"/>
                    </xs:restriction>
                </xs:simpleType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>
    <!--
        definition of credentials element
        used to connect to the database
    -->

    <xs:complexType name="connectionType">
        <xs:sequence>
            <xs:element name="schema">
                <xs:complexType>
                    <xs:attribute name="name">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:minLength value="4"/>
                                <xs:maxLength value="50"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="driver">
                <xs:complexType>
                    <xs:attribute name="name">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:enumeration value="mysql"/>
                                <xs:enumeration value="mssql"/>
                                <xs:enumeration value="sqllite"/>
                                <xs:enumeration value="sqllite2"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
            <xs:element name="host">
                <xs:complexType>
                    <xs:attribute name="address" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <!--
                                    regex to match host comes
                                    from
                                    http://www.regular-expressions.info/regexbuddy/ipaccuratecapture.html
                                    It allows to restrict every octet to match boundaries 0..255
                                    Extended to allow <b>localhost</b> input
                                -->
                                <xs:pattern
                                        value="((25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.(25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)|localhost)?"/>
                                <!--
                                    IPv6 regex was found here:
                                    http://www.violato.net/blog/others/40-ipv6-regex-validation
                                -->
                                <xs:pattern
                                        value="((([0-9A-Fa-f]{1,4}:){7}(([0-9A-Fa-f]{1,4})|:))|(([0-9A-Fa-f]{1,4}:){6}(:|((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})|(:[0-9A-Fa-f]{1,4})))|(([0-9A-Fa-f]{1,4}:){5}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){4}(:[0-9A-Fa-f]{1,4}){0,1}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){3}(:[0-9A-Fa-f]{1,4}){0,2}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:){2}(:[0-9A-Fa-f]{1,4}){0,3}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(([0-9A-Fa-f]{1,4}:)(:[0-9A-Fa-f]{1,4}){0,4}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(:(:[0-9A-Fa-f]{1,4}){0,5}((:((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})?)|((:[0-9A-Fa-f]{1,4}){1,2})))|(((25[0-5]|2[0-4]\d|[01]?\d{1,2})(\.(25[0-5]|2[0-4]\d|[01]?\d{1,2})){3})))(%.+)?"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="port" use="optional">
                        <xs:simpleType>
                            <xs:restriction base="xs:positiveInteger">
                                <xs:maxInclusive value="65535"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="name" use="required">
            <xs:simpleType>
                <xs:restriction base="xs:string">
                    <xs:pattern value="[A-Za-z_]+"/>
                    <xs:minLength value="5"/>
                    <xs:maxLength value="50"/>
                </xs:restriction>
            </xs:simpleType>
        </xs:attribute>
    </xs:complexType>

    <xs:complexType name="queryingType">
        <xs:sequence>
            <xs:element name="option" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType mixed="true" xml:base="xs:boolean">
                    <xs:attribute name="name">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <!--
                                    options concerning querying
                                    the database are to be place
                                    in here
                                -->
                                <xs:enumeration value="autoCommit"/>
                                <xs:enumeration value="useUnicode"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
    </xs:complexType>

    <!--
    Definition of mappings -> qubes
    -->
    <xs:complexType name="qubesMapping">
        <xs:sequence>
            <xs:element name="qube" minOccurs="1" maxOccurs="unbounded">
                <xs:complexType>
                    <xs:attribute name="type" use="required">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <!--
                                    only enumerated values are
                                    to be permitted
                                -->
                                <xs:enumeration value="class"/>
                                <xs:enumeration value="file"/>
                                <xs:enumeration value="inline"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="source" use="optional">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:maxLength value="30"/>
                                <xs:minLength value="2"/>
                                <xs:pattern value="([a-z|A-Z]+)\.{1}(h|qube)"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                    <xs:attribute name="path" use="optional" default="./">
                        <xs:simpleType>
                            <xs:restriction base="xs:string">
                                <xs:minLength value="2"/>
                                <xs:maxLength value="300"/>
                            </xs:restriction>
                        </xs:simpleType>
                    </xs:attribute>
                </xs:complexType>
            </xs:element>
        </xs:sequence>
        <xs:attribute name="path" use="required"/>
    </xs:complexType>
    <!--
    Definition of mappings -> qubes
    -->
</xs:schema>